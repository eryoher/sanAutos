{"version":3,"file":"static/webpack/static\\development\\pages\\promotion.js.dded75c33f38ef7d1a07.hot-update.js","sources":["webpack:///./components/promotions/promotionDetail.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport Countdown from 'react-countdown-now';\r\nimport { Col, Tabs, Button, Modal, Row } from 'antd';\r\nimport Login from '../common/login';\r\nimport BuyPromotion from '../payments/buyPromotion';\r\nimport { connect } from 'react-redux';\r\nimport { createPreference } from '../../actions';\r\nimport getConfig from 'next/config';\r\nimport ListCategories from '../categories/listCategories';\r\n\r\nconst { publicRuntimeConfig } = getConfig();\r\nconst TabPane = Tabs.TabPane;\r\n\r\nclass PromotionDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogin: false,\r\n            showPay: false,\r\n            urlMainImg: null,\r\n            assetSelected: null\r\n        }\r\n    }\r\n\r\n    onChangeMain = (file) => {\r\n        const url = `${publicRuntimeConfig.promotionImagesBasePath}${file.name}`;\r\n        this.setState({ urlMainImg: url, assetSelected: file.id });\r\n    }\r\n\r\n    renderListImg = () => {\r\n        const { assets } = this.props.promotion;\r\n        const { assetSelected } = this.state;\r\n        let rows = [];\r\n        let permited = true;\r\n\r\n        assets.forEach((asset, index) => {\r\n            permited = (!index && !assetSelected) ? false : (assetSelected && assetSelected == asset.id) ? false : true;\r\n            if (permited) {\r\n                rows.push(\r\n                    <div key={asset.id} onClick={() => this.onChangeMain(asset)} className={\"list\"} style={{ backgroundImage: `url(${publicRuntimeConfig.promotionImagesBasePath}${asset.name})` }} />\r\n                )\r\n            }\r\n        });\r\n\r\n        return rows;\r\n    }\r\n\r\n\r\n    renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n        if (completed) {\r\n            // Render a completed state\r\n            return false;\r\n        } else {\r\n            // Render a countdown\r\n            seconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n            minutes = (minutes < 10) ? `0${minutes}` : minutes;\r\n            hours = (hours < 10) ? `0${hours}` : hours;\r\n            days = (days < 10) ? `0${days}` : days;\r\n\r\n            return <span className={\"time\"}> <span className={\"interval\"}>{days}</span>:<span className={\"interval\"}>{hours}</span>:<span className={\"interval\"}>{minutes}</span>:<span className={\"interval\"}>{seconds}</span> </span>;\r\n        }\r\n    }\r\n\r\n    handleCallPaid = () => {\r\n        const token = localStorage.getItem('token')\r\n        if (!token) {\r\n            this.setState({ showLogin: true })\r\n        } else {\r\n            this.setState({ showPay: true })\r\n\r\n        }\r\n    }\r\n\r\n    handleCancelLogin = () => {\r\n        this.setState({ showLogin: false });\r\n    }\r\n\r\n    handleCancelPay = () => {\r\n        this.setState({ showPay: false });\r\n    }\r\n\r\n    handleShowLogin = () => {\r\n        this.setState({ showLogin: true });\r\n    }\r\n\r\n    handleCreatePreference = (preference) => {\r\n        this.props.createPreference(preference)\r\n    }\r\n\r\n    render() {\r\n        const { promotion, preference } = this.props\r\n        const { urlMainImg } = this.state;\r\n        let urlImage = (promotion.assets.length) ? `${publicRuntimeConfig.promotionImagesBasePath}${promotion.assets[0].name}` : \"../../static/img/no-imagen.png\";\r\n        let imgUnderline = '../../static/img/bg-underline.svg'\r\n        let imgClock = '../../static/img/clock.png'\r\n        let imgMap = '../../static/img/map.png'\r\n        let endDate = new Date();\r\n        let companyName = (promotion.company) ? promotion.company.name : \"Marca\";\r\n\r\n        if (urlMainImg) {\r\n            urlImage = urlMainImg;\r\n        }\r\n        if (promotion.end_date && promotion.end_time) {\r\n            let newEnd = promotion.end_date.split('T')[0] + \" \" + promotion.end_time\r\n            endDate = new Date(newEnd);\r\n        }\r\n        else {\r\n            endDate = new Date(promotion.end_date);\r\n        }\r\n\r\n        const urlButton = (preference) ? preference.init_point : \"#\";\r\n        const nameButton = (preference) ? \"DONAR YA\" : \"DONA AQUI\";\r\n        const target = (preference) ? '_blank' : '_self';\r\n\r\n        let donation = promotion.donation.toLocaleString('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 })\r\n        let price = promotion.price.toLocaleString('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 })\r\n        let discount = (promotion.price - (promotion.price * (promotion.discount / 100))).toLocaleString('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 })\r\n        return (\r\n            <Row>\r\n                <Col span={24} className={'menu-categories'} >\r\n                    <ListCategories />\r\n                </Col>\r\n                <Col span={24} className={'promotion-images'} >\r\n                    <Col span={14} className={'left-images'} >\r\n                        <Col span={24} className={'marca-images'} >{ companyName }</Col>\r\n                        <Col span={24} className={'shortd-images'} >{ promotion.shortdescription }</Col>\r\n                        <Col span={24} className={'main-image'} >\r\n                            <img src={urlImage} />\r\n                        </Col>\r\n                        <Col className={'list-images'} >\r\n                            {this.renderListImg()}\r\n                        </Col>\r\n                    </Col>\r\n                    <Col span={10} className={'description-image'}>\r\n                        <Col span={24} className={'detail-deal'} >\r\n                            <Col span={14} className={'donation'} >Donaci贸n: {donation}</Col>\r\n                            <Col span={18} className={'discount'} >Bono de descuento: {promotion.discount}%</Col>\r\n                            <Col span={24} className={'valor'} >  Valor Comercial:</Col>\r\n                            <Col span={24} className={'underline'} style={{ backgroundImage: `url(${imgUnderline})` }} >{price}</Col>\r\n                            <Col span={24} className={'withdiscount'} >{discount}</Col>\r\n                            <Col span={24} className={'countdown'} >\r\n                                <Col span={24} className={'time-promotion'}>\r\n                                    <img className={'img-countdown'} src={imgClock} />Tiempo <br></br>  Restante\r\n                                    <Countdown className={'interval'} date={endDate.getTime()} renderer={this.renderer} />\r\n                                </Col>\r\n                            </Col>\r\n                            <Col span={24} className={'quantity'} >Donaciones disponibles: {promotion.quantity}</Col>\r\n                            <Col span={24} className={\"div-botton-donate\"} >\r\n                                <Button href={urlButton}\r\n                                    target={target}\r\n                                    className={\"botton-donate\"}\r\n                                    onClick={() => this.handleCallPaid()} > {nameButton} </Button>\r\n                                <Login\r\n                                    showLogin={this.state.showLogin}\r\n                                    onCancelLogin={this.handleCancelLogin}\r\n                                    onShowLogin={this.handleShowLogin}\r\n                                />\r\n                                {this.state.showPay &&\r\n                                    <Modal\r\n                                        visible={this.state.showPay}\r\n                                        onCancel={() => this.handleCancelPay()}\r\n                                        footer={[]}\r\n                                    >\r\n                                        <BuyPromotion\r\n                                            {...this.props}\r\n                                            onCreatePreference={this.handleCreatePreference}\r\n                                            onCancelPay={this.handleCancelPay}\r\n                                        />\r\n                                    </Modal>\r\n                                }\r\n                            </Col>\r\n                        </Col>\r\n                    </Col>\r\n                </Col>\r\n                <Col span={24} className={'promotion-description'} >\r\n                    <Col span={24}>\r\n                        <Col span={24} className={\"title-description\"} >\r\n                            <span>Descripci贸n de la </span> <span className={\"interest-blue\"} >Promoci贸n</span>\r\n                        </Col>\r\n                        <Col span={24} className={\"title-body\"} >\r\n                            {promotion.description}\r\n                        </Col>\r\n                    </Col>\r\n                </Col>\r\n                <Col span={24} className={'promotion-description'} >\r\n                    <Col span={24} className={\"title-description\"} >\r\n                        <span>Condiciones </span> <span className={\"interest-blue\"} >de uso</span>\r\n                    </Col>\r\n                    <Col span={24} className={\"title-body\"} >\r\n                        {promotion.description}\r\n                    </Col>\r\n                </Col>\r\n                <Col span={24} className={'promotion-map'} >\r\n                    <Col span={5} className={'title-map'} >Localizaci贸n</Col>\r\n                    <img className={'img-map'} src={imgMap} />\r\n\r\n                </Col>\r\n            </Row >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ auth, payments }) {\r\n    const { preference } = payments;\r\n    return {\r\n        auth,\r\n        preference\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { createPreference })(PromotionDetail);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAdA;AAeA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAhCA;AAkCA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAhDA;AAkDA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AA1DA;AA4DA;AAAA;AAAA;AACA;AACA;AA9DA;AAgEA;AAAA;AAAA;AACA;AACA;AAlEA;AAoEA;AAAA;AAAA;AACA;AACA;AAtEA;AAwEA;AACA;AACA;AAxEA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AAkEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA3LA;AACA;AA6LA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAGA;AAAA;AAAA;;;;A","sourceRoot":""}